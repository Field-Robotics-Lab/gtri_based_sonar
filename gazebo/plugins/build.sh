#!/bin/bash

# Usage:
# $ ./build.sh ./hello-world

mkdir ./build -p
pushd build >& /dev/null

cmake ..

make

popd >& /dev/null

########################
# setenv.sh generation
########################
SETENV_NAME="./setenv.sh"
SETENV_PATH=$(readlink -f $SETENV_NAME)
echo "#!/bin/bash" > ${SETENV_PATH}
echo "# AUTOGENERATED FILE" >> ${SETENV_PATH}

# Find all shared libraries ending in *.so
shared_libs=()
while read -r -d $'\0'; do
    shared_libs+=("$REPLY")
done < <(find ./build -name *.so -print0)

for lib in "${shared_libs[@]}"; do
    dir_name=$(readlink -f $(dirname $lib))
    echo 'export GAZEBO_PLUGIN_PATH=${GAZEBO_PLUGIN_PATH}:'"${dir_name}" >> $SETENV_PATH
done
chmod +x ${SETENV_PATH}


# If arguments are supplied to the build script, then this could mean
# that the user either wants to install the project or execute a program
if [ $# -gt 0 ]; then
    # The user wants to install the project
    if [ $1 == "install" ]; then
        make install
    else
        # The user wants to execute a script in the bin directory
        # Move the bin directory and pass the command to call
        # Example call: ./build.sh ./hello-world
        pushd ./bin >& /dev/null
        $1
        popd >& /dev/null
    fi
fi

